@startuml name SmartHouse
title Тёплый дом TOBE Container Diagram (Спринт 3 Задание 2)

top to bottom direction

!include https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml

Person(user, "User", "Полдьзователь системы")
Person(amdin, "Admin", "Управляет типами устройств")

Container_Boundary(smartHouse, "SmartHouse System") {
  Container(Users, "Users", "C#/java, Postgres/Mongo", "Управление пользователями + авторизация")
  Container(UIApiGateway, "UIApiGateway", "Nginx", "Балансирует, аутентифицирует, представляет API")
  Container(DeviceDictionary, "DeviceDictionary", "C#, Mongo", "Спраовчник типов устройств")
  Container(DeviceZoo, "DeviceZoo", "C#/java, Postgres, Redis ", "Управление устройствами")
  Container(DataBus, "DataBus", "kafka", "Интеграция сервисов")
  Container(UsersCache, "UsersCache", "Redis", "Кэш")
  Container(UsersDb, "UsersDb", "Mongo", "Хранилище пользователей")
  Container(DeviceDictionaryDb, "DeviceDictionaryDb", "MongoDb", "Хранилище типов устройств")
  Container(DeviceZooDb, "DeviceZooDb", "Postgres", "Хранилище устройств")
  Container(DeviceZooCache, "DeviceZooCache", "Redis", "Кэш устройств")
}

Container(Users, "Users", "C#/java, Postgres/Mongo") {
  Component(AuthController, "AuthController", "Авторизация и аутентификация")
  Component(UserController, "UserController", "Управление профилем пользователей")
}

Container(DeviceDictionary, "DeviceDictionary", "C#, Postgres", "Спраовчник типов устройств") {
  Component(DictionaryController, "DictionaryController", "Управление справочником Типов устройств")
}
Container(DeviceZoo, "DeviceZoo", "C#/java, Postgres, Redis ", "Управление устройствами") {
  Component(DeviceZooController, "DeviceZooController", "Управление устройствами пользователя")
  Component(DeviceZooMessageController, "DeviceZooMessageController", "Общение с устройствами")
}

' begin UIApiGateway
Rel(user, UIApiGateway, "Регистрируется/управяет своей УЗ")
Rel(user, UIApiGateway, "Авторизуется, получает JWT")
Rel(user, UIApiGateway, "Регистрирует/управляет")
Rel(user, UIApiGateway, "Просматривает показания (телеметрия)")
Rel(user, UIApiGateway, "Настраивает скрипты поведения (сценарии работы)")
Rel(UIApiGateway, AuthController, "Проверяет JWT")
Rel(amdin, UIApiGateway, "Авторизуется, получает JWT")
Rel(amdin, UIApiGateway, "Управляет Справочником Устройств")

' end UIApiGateway

'begin Users
Rel(UIApiGateway, UserController, "Регистрируется/управяет своей УЗ")
Rel(UserController, UsersCache, "Получение сессии")
Rel(UserController, UsersCache, "Передача сессии")
Rel(UserController, UsersDb, "Получение/Установка карточки пользователя")
Rel(UserController, UsersDb, "Получение/Установка прав пользователя")
Rel(UserController, DataBus, "События действий пользователя")


Rel(UIApiGateway, AuthController, "Авторизуется, получает JWT")
Rel(AuthController, UsersCache, "Передача Сесиия пользователя, выданные JWT")
Rel(AuthController, UsersCache, "Проверка выданных JWT, получение сессии")
Rel(AuthController, UsersDb, "Получение Статуса, Логина, Пароля (Хэш)")
Rel(AuthController, UsersDb, "Создание пользователя")
Rel(AuthController, UsersDb, "Блокировка пользователя")
Rel(AuthController, DataBus, "События авторизации, изменения статуса")
'end users

'begin DeviceDictionary
Rel(UIApiGateway, DictionaryController, "Управляет Справочником Устройств")
Rel(DictionaryController, DeviceDictionaryDb, "Получение списка устройств")
Rel(DictionaryController, DeviceDictionaryDb, "Получение карточки устройства")
Rel(DictionaryController, DeviceDictionaryDb, "Установка  карточки устройства")
Rel(DictionaryController, DeviceDictionaryDb, "Управление статусом типа устройства")

Rel(DictionaryController, DataBus, "Действия пользователя")
Rel(DictionaryController, DataBus, "Создание карточки устройства")
Rel(DictionaryController, DataBus, "Изменение статуса карточки устройства")
'end DeviceDictionary

'begin DeviceZoo
Rel(UIApiGateway, DeviceZooController, "Регистрирует/управляет")
Rel(UIApiGateway, DeviceZooController, "Просматривает показания (телеметрия)")
Rel(UIApiGateway, DeviceZooController, "Настраивает скрипты поведения (сценарии работы)")




'end DeviceZoo


@enduml