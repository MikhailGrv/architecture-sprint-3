@startuml name SmartHouse
title Тёплый дом TOBE Container Diagram (Спринт 3 Задание 2)

top to bottom direction

!include https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml

Person(user, "User", "Полдьзователь системы")
Person(amdin, "Admin", "Управляет типами устройств")
System(smartHouse, "SmartHouse System", "Система Теплый дом")
'System(sensor, "SmartHouse sensor", "Сенсор системы")
System(smartHouseDevice, "SmartHouse Device", "Устройство и/или Датчик(Сенсор)")
System_Ext(partners, "Partners", "Партнеры")

Container_Boundary(smartHouse, "SmartHouse System") {
  Container(DeviceChannelBalance, "DeviceChannelBalance", "Nginx", "Балансирует вызовы от устройств")
  Container(DeviceChannel, "DeviceChannel", "C#/java/C, Redis", "Канал подключений устройств")
  Container(DeviceDictionary, "DeviceDictionary", "C#, Postgres", "Спраовчник типов устройств")
  Container(DeviceZoo, "DeviceZoo", "C#/java, Postgres, Redis ", "Управление устройствами")
  Container(UIApiGateway, "UIApiGateway", "Nginx", "Балансирует, аутентифицирует, представляет API")
  Container(Users, "Users", "C#/java, Postgres/Mongo", "Управление пользователями + авторизация")
  Container(HistoryStorage, "HistoryStorage", "DWH?", "Хранение дсторичестких данных, витрины")
  Container(DataBus, "DataBus", "kafka", "Интеграция сервисов")
}

Rel(partners, smartHouseDevice, "Прошивка")

Rel(partners, user, "Продажа")
Rel(partners, user, "Осблуживание")

Rel(user, smartHouseDevice, "Установка")

Rel(user, UIApiGateway, "Регистрируется/управяет своей УЗ")
Rel(user, UIApiGateway, "Авторизуется, получает JWT")
Rel(user, UIApiGateway, "Регистрирует/управляет")
Rel(user, UIApiGateway, "Просматривает показания (телеметрия)")
Rel(user, UIApiGateway, "Настраивает скрипты поведения (сценарии работы)")
Rel(Users, DataBus, "Передает авторизацию пользователя")
Rel(Users, DataBus, "Передает действия пользователя")

Rel(UIApiGateway, Users, "Проверяет JWT")

Rel(UIApiGateway, Users, "Напрваляет")
Rel(UIApiGateway, DeviceZoo, "Напрваляет")
Rel(UIApiGateway, DeviceDictionary, "Напрваляет")

Rel(amdin, UIApiGateway, "Авторизуется, получает JWT")
Rel(amdin, UIApiGateway, "Управляет Справочником Устройств")

Rel(smartHouseDevice, DeviceChannelBalance, "Установка соединения (статус Online, KeepAlive)")
Rel(smartHouseDevice, DeviceChannelBalance, "Получает конфигурацию")
Rel(smartHouseDevice, DeviceChannelBalance, "Передает показания")

Rel(DeviceChannelBalance, DeviceChannel, "Маршрутизирует запросы")


Rel(DeviceChannel, DataBus, "Передает сообщения от устройств")
Rel(DeviceChannel, DataBus, "Получает сообщения для устройств")
Rel(DeviceChannel, DataBus, "Получает сообщения о типах устройств")
Rel(DeviceChannel, DataBus, "Передает статус подключения устройства")

Rel(DeviceDictionary, DataBus, "Направляет информацию о типах устройств")

Rel(DeviceZoo, DataBus, "Получает сообщения о типах устройств")

Rel(DeviceZoo, DataBus, "Получает статус подключения устройства")
Rel(DeviceZoo, DataBus, "Получает сообщения от устройств")
Rel(DeviceZoo, DataBus, "Передает сообщения для устройств")
Rel(DeviceZoo, DataBus, "Передает действия пользователя")


Rel(HistoryStorage, DataBus, "Получает сообщения для устройств")
Rel(HistoryStorage, DataBus, "Получает сообщения от устройств")
Rel(HistoryStorage, DataBus, "Получает авторизацию пользователя")
Rel(HistoryStorage, DataBus, "Получает действия пользователя")

@enduml